{"version":3,"sources":["components/header.js","components/footer.js","audio/martian-gun.mp3","components/setters.js","components/timer.js","components/reset.js","components/pomodoro.js","helpers.js","containers/pomodoro-container.js","index.js"],"names":["Header","className","href","target","rel","Footer","Setters","handleSetterClick","action","type","typeLength","props","timerRunning","updateSetter","id","onClick","sessionMinutes","this","breakMinutes","Component","Timer","onSession","controlTimerPause","timeLeft","handleTimerTypeMessage","handleTimerStatusMessage","Reset","resetTimer","Pomodoro","updateTimer","state","minutes","seconds","onFirstPomodoro","setState","pomodoroSessionMinutes","updateTimerInformation","handleSessionOrBreak","setTimeout","document","getElementById","play","paddedTime","mins","secs","padTime","typeIsSession","audio","pause","currentTime","initialState","src","audioFile","PomodoroContainer","ReactDOM","render"],"mappings":"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","file":"static/js/main.a0e21f54.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function Header() {\r\n  return (\r\n    <div className=\"header-container\">\r\n      <h1 className=\"title\">P<span>o</span>m<span>o</span>d<span>o</span>r<span>o</span> Timer</h1>\r\n\r\n      <h2>Online timer based on the{\" \"}\r\n        <a href=\"https://en.wikipedia.org/wiki/Pomodoro_Technique\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n          Pomodoro Technique.\r\n        </a>\r\n      </h2>\r\n\r\n      <h2>Increase or decrease the session and break lengths below as needed, and click the timer to start.</h2>\r\n      <h2>The timer will let you know when either a session or a break has ended by playing a sound.</h2>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <ul className=\"social-list\">\r\n        <li className=\"contact\"><a href=\"mailto:jmsanchezdiaz@gmail.com\"><i className=\"fa fa-envelope\"></i></a></li>\r\n        <li className=\"linkedin\"><a href=\"https://www.linkedin.com/in/jmsanchezdiaz\"><i className=\"fa fa-linkedin\"></i></a></li>\r\n        <li className=\"github\"><a href=\"https://github.com/josemsanchez\"><i className=\"fa fa-github\"></i></a></li>\r\n        <li className=\"twitter\"><a href=\"https://twitter.com/JoseSzDz\"><i className=\"fa fa-twitter\"></i></a></li>\r\n        <li className=\"freecodecamp\"><a href=\"http://www.freecodecamp.com/lifeisshort\"><i className=\"fa fa-fire\"></i></a></li>\r\n      </ul>\r\n      <p className=\"footer-note\">Made with <i className=\"fa fa-heart\"></i> by Jose Sanchez / 2022</p>\r\n    </footer>\r\n  )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/martian-gun.5ec88a0c.mp3\";","import React, {Component} from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default class Setters extends Component {\r\n  handleSetterClick = (action, type, typeLength) => {\r\n    let { timerRunning } = this.props;\r\n\r\n    if (timerRunning) {\r\n      return;\r\n    }\r\n\r\n    if (action === 'increment' && typeLength < 60) {\r\n      this.props.updateSetter('increment', type, typeLength);\r\n    }\r\n\r\n    if (action === 'decrement' && typeLength > 1) {\r\n      this.props.updateSetter('decrement', type, typeLength);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"setters\">\r\n        <div className=\"session-setter box-shadow\">\r\n          <p id=\"session-label\">Session length</p>\r\n\r\n          <button\r\n            id=\"session-increment\"\r\n            className=\"control-button\"\r\n            onClick={() => this.handleSetterClick('increment', 'sessionMinutes', this.props.sessionMinutes)}\r\n          >\r\n            <i className=\"fa fa-arrow-up\"></i>\r\n          </button>\r\n\r\n          <p className=\"session-length\">\r\n            <span id=\"session-length\">{this.props.sessionMinutes}</span> min\r\n          </p>\r\n\r\n          <button\r\n            id=\"session-decrement\"\r\n            className=\"control-button\"\r\n            onClick={() => this.handleSetterClick('decrement', 'sessionMinutes', this.props.sessionMinutes)}\r\n          >\r\n            <i className=\"fa fa-arrow-down\"></i>\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"break-setter box-shadow\">\r\n          <p id=\"break-label\">Break length</p>\r\n          <button\r\n            id=\"break-increment\"\r\n            className=\"control-button\"\r\n            onClick={() => this.handleSetterClick('increment', 'breakMinutes', this.props.breakMinutes)}\r\n          >\r\n            <i className=\"fa fa-arrow-up\"></i>\r\n          </button>\r\n\r\n          <p className=\"break-length\">\r\n            <span id=\"break-length\">{this.props.breakMinutes}</span> min\r\n          </p>\r\n\r\n          <button\r\n            id=\"break-decrement\"\r\n            className=\"control-button\"\r\n            onClick={() => this.handleSetterClick('decrement', 'breakMinutes', this.props.breakMinutes)}\r\n          >\r\n            <i className=\"fa fa-arrow-down\"></i>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nSetters.propTypes = {\r\n  breakMinutes: PropTypes.number,\r\n  sessionMinutes: PropTypes.number,\r\n  timerRunning: PropTypes.bool,\r\n  updateSetter: PropTypes.func\r\n}\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class Timer extends Component {\r\n  handleTimerStatusMessage() {\r\n    return this.props.timerRunning\r\n      ? 'Timer is running.'\r\n      : 'Timer is paused. Click to run.'\r\n  }\r\n\r\n  handleTimerTypeMessage() {\r\n    return this.props.onSession\r\n      ? 'Session pomodoro.'\r\n      : 'Break pomodoro.'\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"start_stop\" className=\"timer box-shadow\" onClick={this.props.controlTimerPause}>\r\n        <h3 id=\"time-left\" className=\"timer-length\">{this.props.timeLeft}</h3>\r\n        <h4 id=\"timer-label\" className=\"type\">{this.handleTimerTypeMessage()}</h4>\r\n        <h4 id=\"timer-label\" className=\"status\">{this.handleTimerStatusMessage()}</h4>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nTimer.propTypes = {\r\n  controlTimerPause: PropTypes.func.isRequired,\r\n  onSession: PropTypes.bool.isRequired,\r\n  timeLeft: PropTypes.string.isRequired,\r\n  timerRunning: PropTypes.bool.isRequired\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Reset({ resetTimer }) {\r\n  return (\r\n    <div className=\"reset\">\r\n      <button\r\n        id=\"reset\"\r\n        className=\"control-button box-shadow\"\r\n        onClick={resetTimer}\r\n      >\r\n        Reset\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nReset.propTypes = {\r\n  resetTimer: PropTypes.func.isRequired\r\n}\r\n","import React, {Component} from 'react';\r\nimport audioFile from '../audio/martian-gun.mp3';\r\nimport Setters from '../components/setters';\r\nimport Timer from '../components/timer';\r\nimport Reset from '../components/reset';\r\nimport padTime from '../helpers';\r\n\r\nexport default class Pomodoro extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = this.initialState;\r\n  }\r\n\r\n  get initialState() {\r\n    return {\r\n      breakMinutes: 5,\r\n      minutes: 25,\r\n      onFirstPomodoro: true,\r\n      onSession: true,\r\n      seconds: 0,\r\n      sessionMinutes: 25,\r\n      timeLeft: '25:00',\r\n      timerRunning: false\r\n    }\r\n  }\r\n\r\n  updateTimer = () => {\r\n    let { timerRunning, minutes, onSession, seconds, sessionMinutes, onFirstPomodoro } = this.state;\r\n\r\n    if (!timerRunning) {\r\n      return;\r\n    }\r\n\r\n    if (seconds > 0) {\r\n      this.setState({ seconds: seconds -= 1 })\r\n    }\r\n\r\n    else if (minutes + seconds > 1) {\r\n      let onFirstPomodoroSession = onSession && onFirstPomodoro;\r\n      let pomodoroSessionMinutes = onFirstPomodoroSession ? sessionMinutes : minutes;\r\n\r\n      this.setState({\r\n        minutes: pomodoroSessionMinutes - 1,\r\n        seconds: 60,\r\n        onFirstPomodoro: false,\r\n      }, () => this.updateTimerInformation(pomodoroSessionMinutes, seconds));\r\n    }\r\n\r\n    else if (minutes === 1 && seconds === 0) {\r\n      this.setState({\r\n        minutes: 0,\r\n        seconds: 60\r\n      })\r\n    }\r\n\r\n    else if (minutes + seconds === 0) {\r\n      this.handleSessionOrBreak();\r\n    }\r\n\r\n    setTimeout(this.updateTimer, 1000);\r\n    this.updateTimerInformation(minutes, seconds);\r\n  }\r\n\r\n  handleSessionOrBreak = () => {\r\n    let { onSession, breakMinutes, sessionMinutes } = this.state;\r\n\r\n    let audio = document.getElementById('beep');\r\n    audio.play();\r\n\r\n    if (onSession) {\r\n      this.setState({\r\n        onSession: false,\r\n        minutes: breakMinutes,\r\n        seconds: 0\r\n      })\r\n\r\n    } else if (!onSession) {\r\n      this.setState({\r\n        onSession: true,\r\n        minutes: sessionMinutes,\r\n        seconds: 0\r\n      })\r\n    }\r\n  }\r\n\r\n  updateTimerInformation = (minutes, seconds) => {\r\n    let paddedTime = padTime(minutes, seconds);\r\n\r\n    this.setState({\r\n      timeLeft: paddedTime\r\n    })\r\n  }\r\n\r\n  updateSetter = (action, type, typeLength) => {\r\n    this.setState({\r\n      seconds: 0\r\n    })\r\n\r\n    let typeIsSession = type === 'sessionMinutes';\r\n\r\n    if (action === 'increment') {\r\n      this.setState({\r\n        [type]: typeLength + 1,\r\n        minutes: typeIsSession ? typeLength + 1 : this.state.minutes\r\n      }, () => this.updateTimerInformation(this.state.minutes, this.state.seconds))\r\n    }\r\n\r\n    if (action === 'decrement') {\r\n      this.setState({\r\n        [type]: typeLength - 1,\r\n        minutes: typeIsSession ? typeLength - 1 : this.state.minutes\r\n      }, () => this.updateTimerInformation(this.state.minutes, this.state.seconds))\r\n    }\r\n  }\r\n\r\n  controlTimerPause = () => {\r\n    let { timerRunning } = this.state;\r\n\r\n    if (timerRunning) {\r\n      this.setState({ timerRunning: false })\r\n    } else {\r\n      this.setState({ timerRunning: true }, () => this.updateTimer());\r\n    }\r\n  }\r\n\r\n  resetTimer = () => {\r\n    let audio = document.getElementById('beep');\r\n\r\n    audio.pause();\r\n    audio.currentTime = 0;\r\n\r\n    this.setState(this.initialState);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"pomodoro-container\">\r\n        <Timer\r\n          controlTimerPause={this.controlTimerPause}\r\n          onSession={this.state.onSession}\r\n          timeLeft={this.state.timeLeft}\r\n          timerRunning={this.state.timerRunning}\r\n        />\r\n\r\n        <Reset\r\n          resetTimer={this.resetTimer}\r\n        />\r\n\r\n        <Setters\r\n          breakMinutes={this.state.breakMinutes}\r\n          sessionMinutes={this.state.sessionMinutes}\r\n          timerRunning={this.state.timerRunning}\r\n          updateSetter={this.updateSetter}\r\n        />\r\n\r\n        <audio id=\"beep\" src={audioFile}></audio>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","export default function padTime (minutes, seconds) {\r\n  const mins = minutes < 10 ? `0${minutes}` : `${minutes}`;\r\n  const secs = seconds < 10 ? `0${seconds}` : `${seconds}`;\r\n  return `${mins}:${secs}`;\r\n}\r\n","import React, {Component} from 'react';\r\nimport Header from '../components/header';\r\nimport Footer from '../components/footer';\r\nimport Pomodoro from '../components/pomodoro';\r\n\r\nexport default class PomodoroContainer extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"content-container\">\r\n        <Header />\r\n\r\n        <Pomodoro />\r\n\r\n        <Footer />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'normalize.css';\r\nimport './index.css';\r\n\r\nimport PomodoroContainer from './containers/pomodoro-container';\r\n\r\nReactDOM.render(\r\n  <PomodoroContainer />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}